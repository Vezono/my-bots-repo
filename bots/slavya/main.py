from modules.coach import Coach

coach = Coach()

import telebot
import config

token = config.environ['bpl_slavya']
bot = telebot.TeleBot(token)

from .db import Database

db = Database()

cache = db.get_users()


@bot.message_handler(commands=['apple'])
def apple_handler(m):
    db.proceed_user(m.from_user.id, m.from_user.first_name)
    user = db.get_user(m.from_user.id)
    if user['pancakes'] < 50:
        bot.reply_to(m, '–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —è–±–ª–æ–∫–æ, –Ω—É–∂–Ω–æ –ø–æ—Ç—Ä–∞—Ç–∏—Ç—å 50 –±–ª–∏–Ω–æ–≤! –ê —É —Ç–µ–±—è –∏—Ö –Ω–µ—Ç!')
        return
    db.inc_stat(user.id, "pancakes", -50)
    db.inc_stat(user.id, "apple", 1)
    bot.reply_to(m, '–í—ã –ø–æ–ª—É—á–∏–ª–∏ —è–±–ª–æ–∫–æ.')


@bot.message_handler(commands=['pancake'])
def pancake_handler(m):
    db.proceed_user(m.from_user.id, m.from_user.first_name)
    db.inc_stat(m.from_user.id, "cooked", 1)
    if not m.reply_to_message:
        bot.reply_to(m, '–°–ª–∞–≤—è–Ω—Å–∫–∏–µ –±–ª–∏–Ω—á–∏–∫–∏!')
        db.inc_stat(m.from_user.id, "pancakes", 1)
        db.inc_stat(m.from_user.id, "rep", 1)
        return
    target = m.reply_to_message.from_user
    cooker = m.from_user
    if target.id == bot.get_me().id:
        bot.reply_to(m, '–ù–µ —Å—Ç–æ–∏–ª–æ! –ù–æ –≤—Å–µ —Ä–∞–≤–Ω–æ, —Å–ø–∞—Å–∏–±–æ!')
        db.inc_stat(cooker.id, "rep", 10)
        return
    db.inc_stat(target.id, "pancakes", 1)
    db.inc_stat(cooker.id, "rep", 1)
    bot.reply_to(m, f'{cooker.first_name} –ø—Ä–∏–≥–æ—Ç–æ–≤–∏–ª –±–ª–∏–Ω—á–∏–∫ –¥–ª—è {target.first_name}! –ú–æ–ª–æ–¥—á–∏–Ω–∞!')


@bot.message_handler(commands=['static'])
def stat_handler(m):
    db.proceed_user(m.from_user.id, m.from_user.first_name)
    user = db.get_user(m.from_user.id)
    heart = '‚ù§'
    if user["rep"] < 0:
        heart = 'üñ§'
    tts = f'–°–ª–∞–≤—è—Ç–∏—Å—Ç–∏–∫–∞:\n\n' \
          f'{heart}Ô∏è–ö–∞–∫ —è –∫ —Ç–µ–±–µ –æ—Ç–Ω–æ—à—É—Å—å: {user["rep"]}\n' \
          f'üçé–Ø–±–ª–æ–∫ –≤ –∫–æ—Ä–∑–∏–Ω–∫–µ: {user["apples"]}\n' \
          f'ü•û–ë–ª–∏–Ω—á–∏–∫–æ–≤ –Ω–∞ —Å—á–µ—Ç—É: {user["pancakes"]}\n' \
          f'ü•£–ü—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–æ –±–ª–∏–Ω—á–∏–∫–æ–≤: {user["cooked"]}\n' \
          f'‚öîÔ∏è–ë—Ä–æ—à–µ–Ω–æ –±–ª–∏–Ω—á–∏–∫–æ–≤: {user["throwed"]}'
    bot.reply_to(m, tts)


@bot.message_handler(commands=['enemies'])
def top_enemies_handler(m):
    users = db.get_users()
    users.sort('rep')
    top = [user for user in users]
    top = top[:10]
    tts = '–•—É–¥—à–∏–µ –≤—Ä–∞–≥–∏ –°–ª–∞–≤–∏:\n'
    for index in range(len(top)):
        user = top[index]
        name = user.get('name')
        if user['rep'] >= 0:
            continue
        tts += f'{index + 1}. {name} - {user["rep"]}üñ§Ô∏è\n'
    bot.reply_to(m, tts)


@bot.message_handler(commands=['friends'])
def top_rep_handler(m):
    users = db.get_users()
    users.sort('rep')
    top = [user for user in users]
    top.reverse()
    top = top[:10]
    tts = '–õ—É—á—à–∏–µ –¥—Ä—É–∑—å—è –°–ª–∞–≤–∏:\n'
    for index in range(len(top)):
        user = top[index]
        name = user.get('name')
        if user['rep'] <= 0:
            continue
        tts += f'{index + 1}. {name} - {user["rep"]}‚ù§Ô∏è\n'
    bot.reply_to(m, tts)


@bot.message_handler(commands=['top_pancakes'])
def top_rep_handler(m):
    users = db.get_users()
    users.sort('pancakes')
    top = [user for user in users]
    top.reverse()
    top = top[:10]
    tts = '–°–∞–º—ã–µ –±–æ–≥–∞—Ç—ã–µ –±–ª–∏–Ω–æ–≤–æ–¥—ã:\n'
    for index in range(len(top)):
        user = top[index]
        name = user.get('name')
        tts += f'{index + 1}. {name} - {user["pancakes"]} –±–ª–∏–Ω–æ–≤Ô∏èü•û\n'
    bot.reply_to(m, tts)


@bot.message_handler(commands=['throw'])
def throw_handler(m):
    db.proceed_user(m.from_user.id, m.from_user.first_name)
    db.inc_stat(m.from_user.id, "rep", -3)
    thrower = db.get_user(m.from_user.id)
    if thrower["pancakes"] == 0:
        bot.reply_to(m, '–£ —Å–∞–º–æ–≥–æ –∏—Ö –Ω–µ—Ç, —Ç–∞–∫ –µ—â–µ –∏ –∫–∏–¥–∞—Ç—å —Å–æ–±—Ä–∞–ª—Å—è. –ö–æ—à–º–∞—Ä!')
        return
    db.inc_stat(m.from_user.id, "pancakes", -1)
    if not m.reply_to_message:
        bot.reply_to(m, '–í—ã –±—Ä–æ—Å–∏–ª–∏ –±–ª–∏–Ω—á–∏–∫ –Ω–∞ –ø–æ–ª! –ó–∞—á–µ–º?!')
        return
    target = m.reply_to_message.from_user
    if target.id == bot.get_me().id:
        bot.reply_to(m, '–ó–∞ —á—Ç–æ?!!!')
        db.set_stat(thrower.id, "rep", -50)
        return
    db.inc_stat(target.id, "rep", -4)
    bot.reply_to(m, f'{thrower.first_name} –±—Ä–æ—Å–∏–ª –±–ª–∏–Ω—á–∏–∫ –≤ {target.first_name}!')


@bot.message_handler(commands=['faq'])
def faq_handler(m):
    tts = 'FAQ –ø–æ –°–ª–∞–≤–µ:\n\n' \
          '1. –°–ª–∞–≤–µ –Ω—Ä–∞–≤–∏—Ç—Å—è, –∫–æ–≥–¥–∞ –≤—ã –≥–æ—Ç–æ–≤–∏—Ç–µ –±–ª–∏–Ω—ã.\n' \
          '2. –°–ª–∞–≤—è –Ω–µ –ª—é–±–∏—Ç, –∫–æ–≥–¥–∞ –±–ª–∏–Ω—ã –ø–æ—Ä—Ç—è—Ç.\n' \
          '3. –ï—Å–ª–∏ –≤—ã –∫–∏–Ω–µ—Ç–µ –±–ª–∏–Ω –≤ –∫–æ–≥–æ-—Ç–æ, –°–ª–∞–≤—è –ø–µ—Ä–µ—Å–º–æ—Ç—Ä–∏—Ç —Å–≤–æ–µ –æ—Ç–Ω–æ—à–µ–Ω–∏–µ –∫ –Ω–µ–º—É.\n' \
          '4. –°–ª–∞–≤—è –ª—é–±–∏—Ç –¥—Ä—É–∂–±—É. –ï—Å–ª–∏ –≤—ã –ø–æ–¥–∞—Ä–∏—Ç–µ –±–ª–∏–Ω –∫–æ–º—É-—Ç–æ, –≤—ã –≤—ã—Ä–∞—Å—Ç–µ—Ç–µ –≤ –µ–µ –≥–ª–∞–∑–∞—Ö.\n' \
          '5. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å –±–ª–∏–Ω –∏ —Å–∞–º–æ–π –°–ª–∞–≤–µ!\n' \
          '6. –ù–µ –ø—ã—Ç–∞–π—Ç–µ—Å—å –∫–∏–¥–∞—Ç—å –≤ –Ω–µ–µ –±–ª–∏–Ω—ã.'
    bot.reply_to(m, tts)


@bot.message_handler()
def text_handler(m):
    db.proceed_user(m.from_user.id, m.from_user.first_name)


from modules.bot_keeper import keeper

keeper.bots_to_run.update({bot.get_me().first_name: bot})
print(f'{bot.get_me().first_name} booted in {coach.time()}.')
